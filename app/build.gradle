plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'

    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'
    id 'kotlin-parcelize'
    id 'io.realm.kotlin'
    id 'kotlinx-serialization'
    id 'org.jetbrains.kotlin.plugin.serialization'
}

android {
    namespace 'com.jetpackcompose.playground'
    compileSdk 34

    defaultConfig {
        applicationId "com.jetpackcompose.playground"
        minSdk 24
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "com.jetpackcompose.playground.HiltTestRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    // Allow references to generated code
    kapt {
        correctErrorTypes true
    }

    hilt {
        enableAggregatingTask = true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    testOptions {
        unitTests.returnDefaultValues = false
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.5.1'
    }
    packaging {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    implementation(project(":crypto"))
    implementation(project(":permissions-util"))

    // rebugger
    // https://github.com/theapache64/rebugger
    // Call Rebugger and pass the states you want to track.
    // how to use: Rebugger(trackMap = mapOf("something" to something))
    // where something is your compose remember
    implementation libs.rebugger

    // core
    implementation libs.core.ktx
    implementation libs.appcompat
    implementation libs.material
    implementation libs.constraintlayout
    implementation libs.lifecycle.runtime.ktx
    implementation libs.kotlinx.serialization.json

    // compose
    implementation libs.lifecycle.viewmodel.compose
    implementation libs.constraintlayout.compose

    // collectAsStateWithLifecycle flow in composable
    implementation libs.lifecycle.runtime.compose

    implementation libs.activity.compose

    debugImplementation libs.androidx.ui.tooling
    debugImplementation libs.androidx.ui.test.manifest

    // jetpack compose
    implementation platform(libs.composeBom)
    implementation libs.bundles.compose

    // permissions state /remember permission
//    implementation libs.accompanist.permissions

    // jetpack compose navigation
//    implementation "androidx.navigation:navigation-common-ktx:$nav_version"
//    implementation "androidx.navigation:navigation-common:$nav_version"
    implementation libs.androidx.navigation.compose

    // camera x
    implementation libs.androidx.camera.core
    implementation libs.androidx.camera.camera2
    implementation libs.androidx.camera.lifecycle
    implementation libs.androidx.camera.video
    implementation libs.androidx.camera.view
    implementation libs.androidx.camera.extensions

    // hilt
    implementation libs.hilt.android
    // hiltViewModel() in composable
    implementation libs.androidx.hilt.navigation.compose
    kapt libs.hilt.compiler

    // retrofit 2
    implementation libs.retrofit2.retrofit
    implementation libs.logging.interceptor
    // JSON Converter
    implementation libs.converter.gson
    /* Gson */
    implementation libs.gson
    // coil
    implementation libs.coil.compose
    // flowredux
    implementation libs.flowredux.jvm
    implementation libs.flowredux.compose

    // google maps
    implementation libs.maps.compose

    // room db
    implementation libs.androidx.room.common
    implementation libs.androidx.room.ktx
    kapt libs.androidx.room.compiler

    // realm db
    implementation libs.realm.base
    implementation libs.kotlin.coroutines

    // data store preferences and protobuf
    implementation libs.androidx.datastore.preferences
    implementation libs.androidx.datastore.core

    // TEST ========================================================================================
    // Required -- JUnit 4 framework
    testImplementation libs.test.junit
    testImplementation libs.test.truth
    testImplementation libs.test.ext.junit
    testImplementation libs.test.junit.v412
    testImplementation libs.test.androidx.runner
    testImplementation libs.test.androidx.rules
    // Optional -- Mockk framework
    testImplementation libs.test.mockk

    // Optional -- Mockito framework
    testImplementation libs.test.mockito.core
    // Optional -- mockito-kotlin
    testImplementation libs.test.mockito.kotlin

    // Optional -- Robolectric environment
    testImplementation libs.androidx.core

    // mockwebserver
    testImplementation libs.test.mockwebserver

    // compose
    testImplementation platform(libs.composeBom)
    testImplementation libs.test.androidx.ui.test.junit4
    // ANDROID TEST ========================================================================================
    androidTestImplementation libs.test.ext.junit
    androidTestImplementation libs.test.androidx.runner
    androidTestImplementation libs.test.androidx.rules

    // Optional -- Mockito framework
    androidTestImplementation libs.test.mockito.core
    // Optional -- mockito-kotlin
    androidTestImplementation libs.test.mockito.kotlin

    // espresso
    androidTestImplementation libs.test.espresso.core
    androidTestImplementation libs.test.truth

    // jetpack compose test
    androidTestImplementation platform(libs.composeBom)
    androidTestImplementation libs.test.androidx.ui.test.junit4


    // For Robolectric tests.
//    testImplementation 'com.google.dagger:hilt-android-testing:2.44'
//    // ...with Kotlin.
//    kaptTest 'com.google.dagger:hilt-android-compiler:2.44'
//    // ...with Java.
//    testAnnotationProcessor 'com.google.dagger:hilt-android-compiler:2.44'

    // For instrumented tests.
    androidTestImplementation libs.test.hilt.android.testing
    // ...with Kotlin.
    kaptAndroidTest libs.hilt.android.compiler
    // ...with Java.
    androidTestAnnotationProcessor 'com.google.dagger:hilt-android-compiler:2.50'
    androidTestImplementation libs.kotlinx.serialization.json
}